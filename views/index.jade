extends layout



block content
  div(class="container")
    div(class="header")
      h3(class="text-muted") Accretion Green
    div(id="signupSuccess", class="alert alert-success", style="display:none")
      p(id="signupSuccessText") Thanks for trying to register.
    div(id="statusMessage", class="alert alert-success", style="display:none")
      p(id="statusMessageText") status
    div(id="signupError", class="alert alert-info", style="display:none")
      p(id="signupErrorText") This alert probably means you're viewing a static webpage, not a dynamic one.  Or maybe we had a server error.

    div(id="mapContainer", style="width:10.5cm;")
      p(id="mapContainerText")
      div(id="mapContainerAnchor")

    div(class="jumbotron")
      p
        div(class="btn-group")
          button(id="color1" class="btn color-button")
          button(id="color2" class="btn color-button")
          button(id="color3" class="btn color-button")
          button(id="color4" class="btn color-button")
        a(class="btn btn-lg btn-success", data-toggle="modal", href="#signupModal") Register.
        button(id="status", type="button", class="btn btn-primary") Server Status
    div(class="footer")
      p
        Partially powered by SomaFM Groove Salad -- consider 
        a(href="http://www.somafm.com/support/") donating to SomaFM
        
    // Modal
    div(class="modal fade", id="signupModal", tabindex="-1", role="dialog", aria-labelledby="signupModal", aria-hidden="true")
      div(class="modal-dialog")
        div(class="modal-content")
          div(class="modal-header")
            button(type="button", class="close", data-dismiss="modal", aria-hidden="true") &times;
            h4(class="modal-title") Doesn't actually register you.
          div(class="modal-body")
            form(id="signupForm", role="form")
              input(type="hidden", id="theme", name="theme", value="flatly")
              div(class="form-group")
                label(for="name") Name
                input(type="text", class="form-control", id="name", name="name", placeholder="Your name")
              div(class="form-group")
                label(for="email") Email address
                input(type="email", class="form-control", id="email", name="email", placeholder="Your email address")
              div(class="form-group")
                label(for="previewAccess") Would you like to answer a yes/no question?
                select(class="form-control", name="previewAccess")
                  option Yes
                  option No
          div(class="modal-footer")
            button(id="signup", type="button", class="btn btn-primary") Press Me!
  script(src="../static/jquery/jquery.js")
  script(src="../static/bootstrap/js/bootstrap.min.js")

  // these are all "global" client variables
  script.
    // the following should agree with values in server.js
    var tileWidth  = 10;
    var tileHeight = 10;
  
    var emptyCellColor = '#B99F67'
    var userColorChoice = emptyCellColor;
    var c1 = '#78856D';
    var c2 = '#9A772C';
    var c3 = '#675B3F';
    var c4 = '#766457';
    
    var timeOfLastServerUpdate = 1;  // *server* time -- what server tells us
    var timeOfLastClientUpdate = 0; // also *server* time -- do we need this?  TODO

  script.
    $(document).ready(function () {
          $('.color-button').css('border', '5px solid transparent')
          $('#color1').css('background-color', c1);
          $('#color2').css('background-color', c2);
          $('#color3').css('background-color', c3);
          $('#color4').css('background-color', c4);
          $('#color1').click(function() {
            userColorChoice = c1;
            $('.color-button').css('border', '5px solid transparent')
            $('#color1').css('border', 'solid 5px black');
          });
          $('#color2').click(function() {
            userColorChoice = c2;
            $('.color-button').css('border', '5px solid transparent')
            $('#color2').css('border', 'solid 5px black');
          });
          $('#color3').click(function() {
            userColorChoice = c3;
            $('.color-button').css('border', '5px solid transparent')
            $('#color3').css('border', 'solid 5px black');
          });
          $('#color4').click(function() {
            userColorChoice = c4;
            $('.color-button').css('border', '5px solid transparent')
            $('#color4').css('border', 'solid 5px black');
          });
    });

  script.
    $(document).ready(function () {
      for (var i = tileHeight-1; i >= 0; i--) {
        for (var j = 0; j < tileWidth; j++) {
          var newDiv  = document.createElement('div');
          $(newDiv).attr('id', 'mx' + j + "my" + i);
          $(newDiv).attr('class', 'mapcell');
          //$(newDiv).text('Z'+i+j);
          $('#mapContainer').append(newDiv);
        }
      }
    });


  script.
    $(document).ready(function() {
      $("#signup").click(function() {
        $.post( "/signup", $("#signupForm").serialize(),
                function(data) {
                  $("#signupSuccess").show();
                }
              )
              .error(function(xhr) {
                switch(xhr.status) {
                  case 409:
                    $("#signupDuplicate").show();
                    break;
                  default:
                    $("#signupError").show();
                }
              })
              .always(function() {
                $("#signupModal").modal('hide');
              });
      })
    })

  script.
    $(document).ready(function() {
      $(".mapcell").click(function() {
        var boxId = $(this).attr('id');
        var xPos = boxId.indexOf("mx");
        var yPos = boxId.indexOf("my");
        var cellX = boxId.substring(xPos+2, yPos);
        var cellY = boxId.substring(yPos+2);
        $.post( "/clicker", {"cellX" : cellX, "cellY" : cellY, "color" : userColorChoice},
                function(data) {
                });
      })
    })

  script.
    function getLastServerUpdateTime() {
        $.post( "/getupdatetime", 'get update time',
              function(data) {
                timeOfLastServerUpdate = data;
              });
    }

  // old way that uses result from readMapTileOld() on server
  // TODO delete when stuff below is working
  //script.
  //  function updateMap() {
  //      $.post( "/getmap", 'get map',
  //              function(data) {
  //                $.each(data.Items, function(index, value){
  //                  var cell = value.cellnum.N;
  //                  var cellX = (cell-1) % tileWidth;
  //                  var cellY = Math.floor((cell-1)/tileHeight);
  //                  var count = value.ClickCount.N;
  //                  var mapCellId = "#mx" + cellX + "my" + cellY;
  //                  var color = value.Color.S;
  //                  $(mapCellId).html(count);
  //                  $(mapCellId).css({backgroundColor: color});
  //                });
  //                // server passes us the (server) time that the passed data was last updated
  //                timeOfLastClientUpdate = data.Timestamp;
  //            });
  //  }

  script.
    function updateMap() {
        $.post( "/getmap", 'get map',
                function(mapTile) {
                  //when multiple tiles, mapTile.id looks like x0yo  or x10y20 ... coords of lower left corner
                  //mapTile.id;
              
                  for (var x=0; x<tileWidth; x++) {
                    for (var y=0; y<tileHeight; y++) {
                      var color = mapTile.colors[x][y].color;
                      var mapCellId = "#mx" + x + "my" + y;
                      $(mapCellId).css({backgroundColor: color});
                    }
                  }

                  // server passes us the (server) time that the passed data was last updated
                  timeOfLastClientUpdate = mapTile.updateTime;
              });
    }

  script.  
    function doUpdaterPoll(){
      getLastServerUpdateTime();
      if (timeOfLastServerUpdate > timeOfLastClientUpdate) {
        updateMap();
        timeOfLastClientUpdate = timeOfLastServerUpdate;
      } else {
      }
      setTimeout(doUpdaterPoll,1000);
    }

  // update map when document loads and anytime cell is clicked
  // and start polling
  script.
    $(document).ready(updateMap())
    getLastServerUpdateTime();
  script.
    $(document).ready(doUpdaterPoll())

  // retrieve status from server
  script.
    $(document).ready(function() {
      $("#status").click(function() {
        $.post("/status", 'Status Request',
              function(data) {
                  $("#statusMessage").html(data);
                  $("#statusMessage").show();
              })
      })
    });
